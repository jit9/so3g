dist: xenial

services:
  - docker

language: python
python:
  - "3.6"

stages:
  - name: dockerize
    if: |
      branch = master AND \
      type = push

jobs:
  include:
    - stage: dockerize
      install: true

      before_script:
        # Use the git tag to tag docker image
        - export DOCKER_TAG=`git describe --tags --always`
        # Login to docker
        - echo "${REGISTRY_PASSWORD}" | docker login -u "${REGISTRY_USER}" --password-stdin;

      script:
        # Build the docker image
        - docker-compose build

        # Test import within container
        - docker run --rm so3g /usr/bin/python3 -c 'import so3g'

      after_success:
        # Tag all images for upload to the registry
        - "docker-compose config | grep 'image: ' | awk -F ': ' '{ print $2 }' | xargs -I {} docker tag {}:latest ${DOCKERHUB_ORG}/{}:latest"
        - "docker-compose config | grep 'image: ' | awk -F ': ' '{ print $2 }' | xargs -I {} docker tag {}:latest ${DOCKERHUB_ORG}/{}:${DOCKER_TAG}"

        # Upload to docker registry
        - "docker-compose config | grep 'image: ' | awk -F ': ' '{ print $2 }' | xargs -I {} docker push ${DOCKERHUB_ORG}/{}:${DOCKER_TAG}"
        - "docker-compose config | grep 'image: ' | awk -F ': ' '{ print $2 }' | xargs -I {} docker push ${DOCKERHUB_ORG}/{}:latest"
        - "docker-compose config | grep 'image: ' | awk -F ': ' '{ print $2 }' | xargs -I {} echo ${DOCKERHUB_ORG}/{}:${DOCKER_TAG} pushed"
